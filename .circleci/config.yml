# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  flag_install_s3prl:
    type: boolean
    default: false

jobs:
  run_tests:
    working_directory: ~/espnet_onnx
    docker:
      - image: circleci/python:3.8
    environment:
      PYTHONPATH: ~/s3prl
      
    steps:
      - checkout
      - run: sudo apt-get -y update; sudo apt-get install libsndfile1
      - run:
          command: |
            cd ~
            python3 -m venv venv
            mkdir -p ~/models
      - run:
          command: |
            source ~/venv/bin/activate
            pip install --upgrade pip
            pip install torch==1.11.0 torchvision==0.12.0 torchaudio==0.11.0
            pip install -r tools/requirements_export.txt
            pip install pytest
      - run:
          command: |
            cd ~
            source venv/bin/activate
            wget https://github.com/espnet/espnet_onnx/releases/download/custom_ort_v1.11.1.espnet.3/onnxruntime-1.11.1.espnet-cp38-cp38-linux_x86_64.whl
            pip install onnxruntime-1.11.1.espnet-cp38-cp38-linux_x86_64.whl
      - run: # test model download
          command: |
            wget https://github.com/git-lfs/git-lfs/releases/download/v3.2.0/git-lfs-linux-amd64-v3.2.0.tar.gz
            tar -xvf git-lfs-linux-amd64-v3.2.0.tar.gz
            cd git-lfs-3.2.0
            sudo ./install.sh
            git lfs install
      - run: # install conformer
          command: |
            git clone https://huggingface.co/pyf98/librispeech_conformer_hop_length160
            cd librispeech_conformer_hop_length160
            tar czvf librispeech_conformer_hop_length160.tgz ./README.md data exp meta.yaml
            mv librispeech_conformer_hop_length160.tgz ~/models
      - restore_cache: # restore s3prl folder
          key: s3prl
      - run: # install s3prl
          command: |
            source ~/venv/bin/activate
            cd ~/s3prl
            pip install -e .
            cd ~/espnet_onnx
      - run:
          command: | 
            source ~/venv/bin/activate
            pytest tests --config_dir tests/test_config --wav_dir tests/test_wavs
      - save_cache:
          key: s3prl
          paths:
            - ~/s3prl
            - ~/.cache/s3prl

  run_install_s3prl:
    working_directory: ~/espnet_onnx
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          command: |
            cd ~
            git clone https://github.com/s3prl/s3prl
      - save_cache:
          key: s3prl
          paths:
            - ~/s3prl
            - ~/.cache/s3prl

workflows:
  # setup_environment:
  #   jobs:
  #     - run_install_s3prl

  build_and_test:
    jobs:
      - run_tests
